name: windmill
x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "${LOG_MAX_SIZE:-20m}"
    max-file: "${LOG_MAX_FILE:-10}"
    compress: "true"

services:
  db:
    deploy:
      # To use an external database, set replicas to 0 and set DATABASE_URL to the external database url in the .env file
      replicas: 1
    image: postgres:16
    shm_size: 1g
    restart: unless-stopped
    volumes:
      - ${STORAGE}/windmill/db:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${WINDMILL_POSTGRES_PASSWORD}
      POSTGRES_DB: windmill
    networks:
      - dataflow
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging: *default-logging

  windmill_server:
    image: ghcr.io/windmill-labs/windmill:main
    pull_policy: always
    deploy:
      replicas: 1
    restart: unless-stopped
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:${WINDMILL_POSTGRES_PASSWORD}@db:5432/windmill?sslmode=disable}
      - MODE=server
    networks:
      - dataflow
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ${STORAGE}/windmill/logs:/tmp/windmill/logs
    logging: *default-logging

  windmill_worker:
    image: ghcr.io/windmill-labs/windmill:main
    pull_policy: always
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: "1"
          memory: 2048M
          # for GB, use syntax '2Gi'
    restart: unless-stopped
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:${WINDMILL_POSTGRES_PASSWORD}@db:5432/windmill?sslmode=disable}
      - MODE=worker
      - WORKER_GROUP=default
    networks:
      - dataflow
    depends_on:
      db:
        condition: service_healthy
    # to mount the worker folder to debug, KEEP_JOB_DIR=true and mount /tmp/windmill
    volumes:
      # mount the docker socket to allow to run docker containers from within the workers
      - /var/run/docker.sock:/var/run/docker.sock
      - ${STORAGE}/windmill/cache:/tmp/windmill/cache
      - ${STORAGE}/windmill/logs:/tmp/windmill/logs
    logging: *default-logging

  ## This worker is specialized for "native" jobs. Native jobs run in-process and thus are much more lightweight than other jobs
  windmill_worker_native:
    # Use ghcr.io/windmill-labs/windmill-ee:main for the ee
    image: ghcr.io/windmill-labs/windmill:main
    pull_policy: always
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1"
          memory: 2048M
          # for GB, use syntax '2Gi'
    restart: unless-stopped
    networks:
      - dataflow
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:${WINDMILL_POSTGRES_PASSWORD}@db:5432/windmill?sslmode=disable}
      - MODE=worker
      - WORKER_GROUP=native
      - NUM_WORKERS=8
      - SLEEP_QUEUE=200
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ${STORAGE}/windmill/logs:/tmp/windmill/logs
    logging: *default-logging

  caddy:
    build:
      context: ./containers/windmill-caddy
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - ${STORAGE}/windmill/caddy:/data
    environment:
      - BASE_URL=":80"
    networks:
      - dataflow
      - loadbalancer
    logging: *default-logging
    labels:
      'traefik.enable': 'true'
      'traefik.http.routers.windmill.entrypoints': 'websecure'
      'traefik.http.routers.windmill.rule': 'Host(`windmill.${DOMAIN}`)'
      'traefik.http.routers.windmill.tls': 'true'
      'traefik.http.routers.windmill.tls.certresolver': 'letsencrypt'
      'traefik.http.routers.windmill.tls.domains[0].main': '${DOMAIN}'
      'traefik.http.routers.windmill.tls.domains[0].sans': '*.${DOMAIN}'
      'traefik.http.services.windmill.loadbalancer.server.port': '80'
